REPO: git clone https://github.com/ibm-developer-skills-network/duwjx-tdd_bdd_PracticeCode.git
https://auth0.com/blog/xunit-to-test-csharp-code/
https://code-maze.com/asp-net-core-testing/
Test fixtures
    Test fixtures are used to establish an initial know state before and after running tests
    PyUnit
    def setUpModule():             # runs once before any tests
    def tearDownModule():          # runs once after all tests
    # 
    class MyTestCases(TestCase):   # the start of a test case

        @classmethod
        def setUpClass(cls):       # runs once before test case
    # 
        @classmethod
        def tearDownClass(cls):    # runs once after test case
    # 
        def setUp(self):           # runs before each test

        def tearDown(self):        # runs after each test
Factories and Fakes:

Mocking:

== Python test tools

pip install pytest coverage

== Testing

BDD-style tests

# Given a patient record
(Python code to create a record)
# And some other thing
(do the other thing)
# When we normalize the data
(call method to do stuff)
# Then thereâ€™s a new record for the patient, with a score of 0.5
self.assertEqual(record.score, 0.5)